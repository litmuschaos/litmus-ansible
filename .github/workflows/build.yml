---
name: Build
on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

env:
  DOCKER_REPO: litmuschaos
  DOCKER_IMAGE: ansible-runner
  DOCKER_TAG: ci

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: checking dependencies are installed
        run: make deps

      - name: Running ansible syntax-checks
        run: make syntax-checks

      - name: Running ansible lint-checks
        run: make lint-checks

  gitleaks-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run GitLeaks
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz && \
          tar -zxvf gitleaks_8.18.2_linux_x64.tar.gz && \
          sudo mv gitleaks /usr/local/bin && gitleaks detect --source . -v


  build:
    needs: pre-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: false
          file: build/ansible-runner/Dockerfile
          platforms: linux/amd64
          tags: litmuschaos/ansible-runner:ci

  trivy:
    needs: pre-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Build an image from Dockerfile
        run: |
          docker build -f build/ansible-runner/Dockerfile -t docker.io/litmuschaos/ansible-runner:${{ github.sha }} . --build-arg TARGETARCH=amd64

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/litmuschaos/ansible-runner:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'