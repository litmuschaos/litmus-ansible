---
name: litmus-ansible-ci
on:
  pull_request:
    branches:
      - master    
  push:
    branches:
      - master
    tags-ignore:
      - '**'

env:
  DOCKER_REPO: litmuschaos
  DOCKER_IMAGE: ansible-runner
  DOCKER_TAG: ci

defaults:
  run:
    shell: bash

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Image
        env:
          SAVE_PATH: ${{ github.workspace }}        
        run: |
          make build
          make save
          chmod +x ${{ github.workspace }}/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: myimage
          path: |
            ${{ github.workspace }}/image.tar
            ${{ github.workspace }}/tag.txt     

  image-checks: 
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: myimage
          path: ${{ github.workspace }}
          
      - name: Load Docker image
        run: |
          docker load --input ${{ github.workspace }}/image.tar        

      - name: checking dependencies are installed
        run: make deps
                  
      - name: Running ansible syntax-checks
        run: make syntax-checks

      - name: Running ansible lint-checks
        run: make lint-checks                                                           

      - name: Running trivy check
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.11.0/trivy_0.11.0_Linux-64bit.tar.gz
          tar zxvf trivy_0.11.0_Linux-64bit.tar.gz
          make security-checks
          
  push:
    runs-on: ubuntu-latest
    needs: [build,image-checks]
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2      
      
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: myimage
          path: ${{ github.workspace }}
          
      - name: Load Docker image
        run: |
          docker load --input ${{ github.workspace }}/image.tar

      - name: Push Image
        env:
          DNAME: ${{ secrets.DNAME }}
          DPASS: ${{ secrets.DPASS }}          
        run: |
          make push
