---
apiVersion: v1
kind: Pod
metadata:
  name: kafka-liveness
  labels: 
    name: kafka-liveness 
spec:
  restartPolicy: Never
  initContainers:
  - name: kafka-topic-creator
    image: {{ kafka_liveness_image }}
    imagePullPolicy: Always
    env: 
      - name: TOPIC_NAME
        value: {{ kafka_topic }}
      - name: KAFKA_INSTANCE_NAME
        value: {{ kafka_instance }} 
      - name: ZOOKEEPER_SERVICE
        value: {{ zk_service }}
      - name: ZOOKEEPER_PORT
        value: "{{ zk_port }}"
      - name: REPLICATION_FACTOR
        value: "{{ kafka_replication_factor  }}"
    command: 
      - sh
      - -c
      - "./topic.sh"
  containers:
  - name: kafka-producer
    image: {{ kafka_liveness_image }}
    imagePullPolicy: Always
    env:
      - name: TOPIC_NAME
        value: {{ kafka_topic }}
      - name: KAFKA_SERVICE
        value: {{ kafka_service }} 
      - name: KAFKA_PORT
        value: "{{ kafka_port }}"
    command:
      - sh
      - -c
      - "stdbuf -oL ./producer.sh"
  - name: kafka-consumer
    image: {{ kafka_liveness_image }}
    imagePullPolicy: Always
    env:
      - name: KAFKA_CONSUMER_TIMEOUT
        value: "{{ kafka_consumer_timeout }}"
      - name: TOPIC_NAME
        value: {{ kafka_topic }}
      - name: KAFKA_SERVICE
        value: {{ kafka_service }}
      - name: KAFKA_PORT
        value: "{{ kafka_port }}"
    command:
      - sh
      - -c
      - "stdbuf -oL ./consumer.sh"