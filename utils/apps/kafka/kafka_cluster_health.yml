---
- name: "[Status]: Verify that all kafka pods are running"
  include_tasks: "/utils/common/status_app_pod.yml"
  vars:
    delay: 2
    retries: 90
    app_ns: "{{ kafka_ns }}"
    app_label: "{{ kafka_label }}"

- name: "[Status]: Verify that all zookeeper pods are running"
  include_tasks: "/utils/common/status_app_pod.yml"
  vars:
    delay: 2
    retries: 90
    app_ns: "{{ zk_ns }}"
    app_label: "{{ zk_label }}"

- name: "[Status]: Obtain pods name of any one of the zookeeper pods"
  shell: >
    kubectl get pods -l {{ zk_label }} -n {{ zk_ns }} 
    --no-headers -o custom-columns=:metadata.name | head -n 1
  args:
    executable: /bin/bash
  register: zk_result

- set_fact: 
    zk_pod_name: "{{ zk_result.stdout }}"

- name: "[Status]: Obtain the desired replica count of the Kafka statefulset"
  shell: >
    kubectl get sts -l {{ kafka_label }} -n {{ kafka_ns }}
    --no-headers -o custom-columns=:spec.replicas
  args:
    executable: /bin/bash
  register: kafka_sts_replicas

- block: 
    - name: "[Status]: Derive the available kafka brokers from zookeeper"
      shell: >
        kubectl exec {{ zk_pod_name }} -n {{ zk_ns }} bash 
        -- zkCli.sh -server {{ zk_service }}:{{ zk_port }}/{{ kafka_instance }}
        ls /brokers/ids | tail -n 1 | tr -d '[],' | tr ' ' '\n'  | wc -l
      args: 
        executable: /bin/bash
      register: kafka_available_brokers

    - name: "[Status]: Check whether all kafka brokers are alive"
      debug: 
        msg: "All Kafka brokers are alive"
      failed_when: "kafka_sts_replicas.stdout != kafka_available_brokers.stdout"

  when: "kafka_instance is defined and kafka_instance != ''"

# - block: 
#     - name: Derive the available kafka brokers from zookeeper
#       shell: >
#         kubectl exec {{ zk_pod_name }} -n {{ zk_ns }} bash 
#         -- zkCli.sh -server {{ zk_service }}:{{ zk_port }} 
#         ls /brokers/ids | tail -n 1 | tr -d '[],' | tr ' ' '\n'  | wc -l
#       args: 
#         executable: /bin/bash
#       register: kafka_available_brokers

#     - name: Check whether all kafka brokers are alive
#       debug: 
#         msg: "All Kafka brokers are alive"
#       failed_when: "kafka_sts_replicas.stdout != kafka_available_brokers.stdout"

#   when: "kafka_instance is not defined or kafka_instance == ''"
