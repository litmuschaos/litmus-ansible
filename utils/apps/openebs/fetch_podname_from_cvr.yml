---
- name: "[Prepare]: Derive PV from application PVC"
  shell: >
    kubectl get pvc {{ a_pvc }}
    -o custom-columns=:spec.volumeName -n {{ a_ns }}
    --no-headers
  args:
    executable: /bin/bash
  register: pv

- name: "[Prepare]: Get list of pool deployments from cvr"
  shell: >
    kubectl get cvr -n {{ openebs_ns }}
    -l openebs.io/persistent-volume={{ pv.stdout }} --no-headers
    -o=jsonpath='{range .items[*]}{.metadata.labels.cstorpool\.openebs\.io\/name}{"\n"}{end}'
    | awk '{print $1}'
  args:
    executable: /bin/bash
  register: pool_deployment_list

- name: "[Prepare]: Obtaining the replicasets corresponding to pool deployments"
  shell: >
    kubectl get rs -l {{ pool_label }} -n {{ openebs_ns }} --no-headers
    -o=jsonpath='{.items[?(@.metadata.ownerReferences[0].name=="{{deployment}}")].metadata.name}'
  register: rs_list
  loop: "{{ pool_deployment_list.stdout_lines }}"
  loop_control:
    loop_var: deployment
  
- name: "[Prepare]: Obtaining the all pool pods"
  shell: >
    kubectl get pod -l {{ pool_label }} -n {{ openebs_ns }} --no-headers
    -o=jsonpath='{.items[?(@.metadata.ownerReferences[0].name=="{{rs.stdout}}")].metadata.name}'
  register: pool_pod_list
  loop: "{{ rs_list.results }}"
  loop_control:
    loop_var: rs

- set_fact:
    pool_pod_named_list: "{{ pool_pod_named_list|default([])}}"

- name: "[Prepare]: Build a list of replica pods"
  set_fact:
    pool_pod_named_list : "{{ pool_pod_named_list  }} + [ '{{ pool_pod.stdout }}' ]"
  loop: "{{ pool_pod_list.results }}"
  loop_control:
    loop_var: pool_pod