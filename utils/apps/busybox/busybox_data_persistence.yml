---
- block:

   - name: "[Data-Persistence]: Create some test data in the busybox app"
     shell: >
       kubectl exec {{ pod_name }} -n {{ ns }} 
       -- sh -c "{{ item }}"
     args:
       executable: /bin/bash
     register: result
     failed_when: "result.rc != 0"
     with_items:
       - "dd if=/dev/urandom of=/busybox/{{ testfile }} bs={{ blocksize }} count={{ blockcount }}"
       - "md5sum /busybox/{{ testfile }} > /busybox/{{ testfile }}-pre-chaos-md5"

  when: status == "LOAD"

- block:

   - name: "[Data-Persistence]: Kill the application pod"
     shell: >
       kubectl delete pod {{ pod_name }} -n {{ ns }}
     args:
       executable: /bin/bash

   - name: "[Data-Persistence]: Verify if the applicaion pod is deleted"
     shell: >
       kubectl get pods -n {{ ns }}
     args:
       executable: /bin/bash
     register: podstatus
     until: '"{{ pod_name }}" not in podstatus.stdout'
     retries: 2
     delay: 150

   - name: "[Data-Persistence]: Obtain the newly created pod name for applicaion"
     shell: >
       kubectl get pods -n {{ ns }} -l {{ label }} -o jsonpath='{.items[].metadata.name}'
     args:
       executable: /bin/bash
     register: newpod_name

   - name: "[Data-Persistence]: Checking application pod is in running state"
     shell: kubectl get pods -n {{ ns }} -o jsonpath='{.items[?(@.metadata.name=="{{ newpod_name.stdout }}")].status.phase}'
     register: result
     until: "((result.stdout.split()|unique)|length) == 1 and 'Running' in result.stdout"
     delay: 2
     retries: 90

   - name: "[Data-Persistence]: Checking application conatiner is in running state"
     shell: >
        kubectl get pods -n {{ ns }} -o jsonpath='{.items[?(@.metadata.name=="{{ newpod_name.stdout }}")].status.containerStatuses[].state}' | grep running
     args:
       executable: /bin/bash
     register: containerStatus
     until: "'running' in containerStatus.stdout"
     delay: 2
     retries: 90

   - name: "[Data-Persistence]: Check the md5sum of stored data file"
     shell: >
       kubectl exec {{ newpod_name.stdout }} -n {{ ns }}
       -- sh -c "md5sum /busybox/{{ testfile }} > /busybox/{{ testfile }}-post-chaos-md5"
     args:
       executable: /bin/bash
     register: status 
     failed_when: "status.rc != 0"

   - name: "[Data-Persistence]: Verify whether data is consistent"
     shell: >
           kubectl exec {{ newpod_name.stdout }} -n {{ ns }}
           -- sh -c "diff /busybox/{{ testfile }}-pre-chaos-md5 /busybox/{{ testfile }}-post-chaos-md5"
     args:
       executable: /bin/bash
     register: result 
     failed_when: "result.rc != 0 or result.stdout != ''"   

  when: status == "VERIFY"

- block:

   - name: "[Data-Persistence]: Obtain the current applicaion pod name"
     shell: >
       kubectl get pods -n {{ ns }} -l {{ label }} -o jsonpath='{.items[].metadata.name}'
     args:
       executable: /bin/bash
     register: newpod_name

   - name: "[Data-Persistence]: Delete/drop the files"
     shell: > 
       kubectl exec {{ newpod_name.stdout }} -n {{ ns }}
       -- sh -c "rm -f /busybox/{{ testfile }}*"
     args:
       executable: /bin/bash
     register: status 

   - name: "[Data-Persistence]: Verify the successful file deletion"
     shell: > 
           kubectl exec {{ newpod_name.stdout }} -n {{ ns }}
           -- ls /busybox/
     args:
       executable: /bin/bash
     register: result 
     failed_when: "testfile in result.stdout"   

  when: status == "DELETE"