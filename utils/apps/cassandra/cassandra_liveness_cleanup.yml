## It will fetch the clusterIP of the livenss service
- name: "[Verification]: Getting the clusterIP of liveness service"
  shell:
    kubectl get svc -l name=cassandra-liveness-service -n {{ liveness_ns }} --no-headers -o custom-columns=:.spec.clusterIP
  register: liveness_svc_clusterIP
  args:
    executable: /bin/bash

## It will check the status of liveness pod cycle
## Wait till the cycle come to the complete state
- name: "[Verification]: Wait for liveness pod to come in CycleComplete state"
  uri:
    url: "http://{{ liveness_svc_clusterIP.stdout }}:{{ liveness_svc_port }}"
    return_content: yes
  register: result
  until: "'CycleComplete' in result.content"
  delay: 2
  retries: 90

## It will record the resource version of liveness pod
- name: "[Verification]: Record the resource version of liveness pod"
  shell:
    kubectl get pods {{ cassandra_liveness_pod.stdout }} -n {{ liveness_ns }} --no-headers 
    -o custom-columns=:.metadata.resourceVersion
  args:
    executable: /bin/bash
  register: liveness_rv_after
  failed_when: "liveness_rv_after.stdout != liveness_rv_bef.stdout"

- name: "[CleanUP]: Remove the cassandra liveness pod"
  shell: 
    kubectl delete -f /tmp/cassandra_liveness_deploy.yml -n {{ liveness_ns }}
  args:
    executable: /bin/bash
  register: result
  delay: 2
  retries: 90
    
- name: "[CleanUP]: Confirm that the cassandra liveness pod is deleted successfully"
  shell:
    kubectl get pod -l name=cassandra-liveness-deploy --no-headers -n {{ liveness_ns }}
  args: 
    executable: /bin/bash
  register: result
  until: "'Running' not in result.stdout"
  delay: 2
  retries: 90
