- name: "[Derivation]: Get a random application pod name"
  shell: >
    kubectl get pods -l {{ app_label }} -n {{ app_ns }} -o jsonpath='{.items[0].metadata.name}'
  args:
    executable: /bin/bash
  register: application_pod_name

## CHECKING FOR THE DISTRIBUTION OF THE LOAD ON THE RING
## NODE TOOL STATUS WILL RETURN THE PERCENTAGE OF LOAD DISTRIBUTED TO EACH REPLICAS
- name: "[Derivation]: Checking for the distribution of the load on the ring"
  shell: >
    kubectl exec -it {{ application_pod_name.stdout }} -n {{ app_ns }} nodetool status | awk '{print $6}'
  args:
    executable: /bin/bash
  register: node_tool_status

- name: "[Derivation]: Converting nodetool status to a list"
  set_fact:
    node_tool_status_list:  "{{ node_tool_status.stdout_lines|list }}"

- name: "[Derivation]: Getting the replica count of the application"
  shell: >
    kubectl get statefulset -l {{ app_label }} -n {{ app_ns }} --no-headers -o custom-columns=:status.replicas
  args:
    executable: /bin/bash
  register: replica_count

## IT WILL MAKE SURE THAT EVERY REPLICA SHOULD CONTAIN SOME LOAD
## IT WILL FAIL IF ANY OF THE REPLICA CONTAINS 0% OF LOAD
- name: "[Verification]: Check for the distribution of load on all replicas"
  include: check_load_distribution.yml
  with_sequence: start=1 end={{ replica_count.stdout }}