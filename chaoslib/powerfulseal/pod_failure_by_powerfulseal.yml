- block:

    - name: Wait for the specified ramp time before injecting chaos
      wait_for: timeout="{{ ramp_time }}"
      when: "ramp_time is defined and ramp_time != ''"

     ## RECORD EVENT FOR CHAOS INJECTION
    - include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
      vars:
        stage: "ChaosInject"
        exp_pod_name: "{{ chaos_pod_name }}"
        engine_ns: "{{ c_ns }}"
        message: "Injecting {{ c_experiment }} chaos on application pod"
      when: "c_engine is defined and c_engine != ''"

    - block:
        - name: Generate a run id if not passed from the engine/experiment
          shell: echo $(mktemp) | cut -d '.' -f 2 | cut -c -6
          register: rand_string   

        - set_fact:
            run_id: "{{ rand_string.stdout | lower }}"
      when: "run_id is not defined or run_id == ''"

    - name: Getting the serviceAccountName
      shell: >
        kubectl get pod {{ chaos_pod_name }} -n {{ c_ns }} -o 
        custom-columns=:.spec.serviceAccountName --no-headers
      args:
        executable: /bin/bash
      register: chaos_service_account
    
    - name: Generate the powerfulseal deployment spec from template
      template:
        src: /chaoslib/powerfulseal/powerfulseal.j2
        dest: powerfulseal.yml
      vars:
        c_svc_acc: "{{ chaos_service_account.stdout }}"
      
    - name: Setup powerfulseal to initiate random pod chaos 
      shell:
        kubectl apply -f powerfulseal.yml -n {{ c_ns }}
      args:
        executable: /bin/bash
      register: deployment_result
      failed_when: "deployment_result.rc != 0"

    - name: Confirm that powerfulseal pod is running
      shell: >
        kubectl get pod -l name=powerfulseal-{{ run_id }} --no-headers -n {{ c_ns }}
      args:
        executable: /bin/bash
      register: result
      until: "'Running' in result.stdout"
      delay: 2
      retries: 90
    
    - name: Wait for chaos duration
      wait_for: timeout="{{ c_duration }}"

    - name: Wait for the specified ramp time after injecting chaos
      wait_for: timeout="{{ ramp_time }}"
      when: "ramp_time is defined and ramp_time != ''"

    - name: Tear down the powerfulseal deployment
      shell: 
        kubectl delete -f powerfulseal.yml -n {{ c_ns }}
      args:
        executable: /bin/bash
      register: result
      failed_when: "result.rc != 0"

    - name: Confirm that powerfulseal pod is cleaned up
      k8s_facts:
        kind: Deployment
        namespace: "{{ c_ns }}"
        label_selectors:
          - name=powerfulseal-{{ run_id }}
      register: resource_deployment
      until: "resource_deployment.resources | length < 1"
      delay: 2
      retries: 90

  rescue:

    - block: 

        - name: Tear down the powerfulseal deployment
          shell: >
            kubectl delete -f powerfulseal.yml -n {{ c_ns }}
          args:
            executable: /bin/bash
          when: deployment_result.rc == 0
        
        - name: Confirm that powerfulseal pod is cleaned up
          k8s_facts:
            kind: Deployment
            namespace: "{{ c_ns }}"
            label_selectors:
              - name=powerfulseal-{{ run_id }}
          register: resource_deployment
          until: "resource_deployment.resources | length < 1"
          delay: 2
          retries: 90

      when: "deployment_result is defined"

    - fail:
        msg: "pod_failure_by_powerfulseal lib failed"
      when: true