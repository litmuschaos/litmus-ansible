- block:

    - debug:
        msg: "***** Waiting for the ramp interval of {{ ramp_time }}s *****"

    - name: "[Ramp]: Waiting for the specified ramp time before injecting chaos"
      wait_for: timeout="{{ ramp_time }}"

  when: "ramp_time is defined and ramp_time != ''" 

## RECORD EVENT FOR CHAOS INJECTION
- name: "[Event]: Generating an Event for ChaosInjection"
  include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
  vars:
    stage: "ChaosInject"
    exp_pod_name: "{{ chaos_pod_name }}"
    engine_ns: "{{ c_ns }}"
    message: "Injecting {{ c_experiment }} chaos on {{ disk_name }} disk"
  when: "c_engine is defined and c_engine != ''"

- name: "[Inject]: Detaching the {{ disk_name }} disk from {{ node_name }} node"
  shell: gcloud compute instances detach-disk {{ node_name }} --disk {{ disk_name }} --zone {{ zone_name }}

- name: "[Wait]: Waiting for chaos duration of {{ c_duration }}s after chaos injection"
  wait_for:
    timeout: "{{ c_duration }}"

- name: "[Status]: Verify that the disk is connected to node (post)"
  include_tasks: "/utils/cloud/gcp/status_disk.yml"
  
- block:
  - name: "[Recover]: If the disk is not attached, it will attach manually"
    shell: gcloud compute instances attach-disk {{ node_name }} --device-name {{ disk_name }} --disk {{ disk_name }} --zone {{ zone_name }}
  when: "inuse is defined and inuse == false"

- block:

    - debug:
        msg: "***** Waiting for the ramp interval of {{ ramp_time }}s *****"

    - name: "[Ramp]: Waiting for the specified ramp time before injecting chaos"
      wait_for: timeout="{{ ramp_time }}"

  when: "ramp_time is defined and ramp_time != ''" 