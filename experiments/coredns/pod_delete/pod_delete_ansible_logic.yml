---
- hosts: localhost
  connection: local

  vars:
    c_experiment: "coredns-pod-delete"
    c_duration: "{{ lookup('env','TOTAL_CHAOS_DURATION') }}"
    c_interval: "{{ lookup('env','CHAOS_INTERVAL') }}"
    c_force: "{{ lookup('env','FORCE') }}"
    c_lib: "{{ lookup('env','LIB') }}"
    a_ns: "{{ lookup('env','APP_NAMESPACE') }}"
    a_label: "{{ lookup('env','APP_LABEL') }}"
    a_kind: "{{ lookup('env','APP_KIND') }}"
    kill_count: "{{ lookup('env','KILL_COUNT') }}"
    chaos_uid: "{{ lookup('env','CHAOS_UID') }}"
    c_engine: "{{ lookup('env','CHAOSENGINE') }}"
    chaos_pod_name: "{{ lookup('env','POD_NAME') }}"
    c_ns: "{{ lookup('env','CHAOS_NAMESPACE') }}"

  tasks:
    - block:

        - include: pod_delete_ansible_prerequisites.yml
      
        - include_vars:
            file: /tmp/chaosutil.yml

        ## GENERATE EXP RESULT NAME
        - name: Construct chaos result name
          set_fact:
            c_result: "{{ c_engine }}-{{ c_experiment }}"
          when: "c_engine is defined and c_engine != ''"

        ## RECORD START-OF-EXPERIMENT IN LITMUSCHAOS RESULT CR
        - include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars:
            status: 'SOT'
            namespace: "{{ c_ns }}"
        
        ## Provision services and pods for the chaos injection
        - name: Provision nginx pod
          template:
            src: nginx.j2
            dest: /tmp/nginx.yml
          
        - name: Provision liveness pod
          template:
            src: liveness-app.j2
            dest: /tmp/liveness-app.yml
              
        - name: Deploying and exposing nginx pod
          shell: kubectl apply -f /tmp/nginx.yml
          register: nginx_deploy

        - name: Deploying liveness pod 
          shell: kubectl apply -f /tmp/liveness-app.yml
          register: liveness_app_deploy

        ## PRE-CHAOS APPLICATION LIVENESS CHECK
        
        - name: Verify that the AUT (Application Under Test- coredns app) is running 
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"      
            delay: 2
            retries: 90

        - name: Verify that the AUT (Application Under Test- liveness app) is running 
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:     
            delay: 2
            retries: 90
            app_ns: "{{ c_ns }}"
            app_label: "run=liveness-app"

        ## RECORD EVENT FOR PRE-CHAOS CHECK
        - include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
          vars:
            stage: "PreChaosCheck"
            exp_pod_name: "{{ chaos_pod_name }}"
            engine_ns: "{{ c_ns }}"
            message: "AUT is Running successfully"
          when: "c_engine is defined and c_engine != ''"
  
        ## FAULT INJECTION 
        - include_tasks: "{{ c_util }}"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"
          
        ## POST-CHAOS APPLICATION LIVENESS CHECK
        
        - name: Verify that the AUT (Application Under Test- coredns app) is running 
          include_tasks: "/utils/common/status_app_pod.yml"
          vars: 
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"     
            delay: 2
            retries: 90

        - name: Verify that the AUT (Application Under Test- liveness app) is running 
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:     
            delay: 2
            retries: 90
            app_ns: "{{ c_ns }}"
            app_label: "run=liveness-app"
          
        ## RECORD EVENT FOR POST-CHAOS CHECK
        - include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
          vars:
            stage: "PostChaosCheck"
            exp_pod_name: "{{ chaos_pod_name }}"
            engine_ns: "{{ c_ns }}"
            message: "AUT is Running successfully"
          when: "c_engine is defined and c_engine != ''"

        ## DEPROVISIONING TASK
    
        - name: deleting service and pod of nginx
          shell: kubectl delete -f /tmp/nginx.yml
            
        - name: deleting liveness pod 
          shell: kubectl delete -f /tmp/liveness-app.yml

        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact: 
            flag: "Fail"

        - block:

            - name: deleting service and pod of nginx
              shell: kubectl delete -f /tmp/nginx.yml
              when: "nginx_deploy.rc == 0"

          when: "nginx_deploy is defined and nginx_deploy != ''"  
        
        - block:

            - name: deleting liveness pod 
              shell: kubectl delete -f /tmp/liveness-app.yml
              when: "liveness_app_deploy.rc == 0"

          when: "liveness_app_deploy is defined and liveness_app_deploy != '' "

      always:

        ## Getting failure step from experiment-pod
        - include_tasks: /utils/runtime/getting_failure_step.yml  
        
        ## RECORD END-OF-TEST IN LITMUSCHAOS RESULT CR
        - include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars:
            status: 'EOT'
            namespace: "{{ c_ns }}"
