---
- hosts: localhost
  connection: local

  vars:
    c_experiment: "cassandra-pod-delete"
    c_duration: "{{ lookup('env','TOTAL_CHAOS_DURATION') }}"
    c_interval: "{{ lookup('env','CHAOS_INTERVAL') }}"
    ramp_time: "{{ lookup('env','RAMP_TIME') }}"
    c_force: "{{ lookup('env','FORCE') }}"
    c_lib: "{{ lookup('env','LIB') }}"
    a_ns: "{{ lookup('env','APP_NAMESPACE') }}"
    a_label: "{{ lookup('env','APP_LABEL') }}"
    a_kind: "{{ lookup('env','APP_KIND') }}"
    kill_count: "{{ lookup('env','KILL_COUNT') }}"
    chaos_uid: "{{ lookup('env','CHAOS_UID') }}"
    c_engine: "{{ lookup('env','CHAOSENGINE') }}"
    chaos_pod_name: "{{ lookup('env','POD_NAME') }}"
    c_ns: "{{ lookup('env','CHAOS_NAMESPACE') }}"
    liveness_check: "{{ lookup('env','CASSANDRA_LIVENESS_CHECK') }}"
    cassandra_svc_name: "{{ lookup('env','CASSANDRA_SVC_NAME') }}"
    cassandra_port: "{{ lookup('env','CASSANDRA_PORT') }}"
    liveness_svc_port: "{{ lookup('env','LIVENESS_SVC_PORT') }}"
    cassandra_liveness_image: "{{ lookup('env','CASSANDRA_LIVENESS_IMAGE') }}"
    replication_factor: "{{ lookup('env','KEYSPACE_REPLICATION_FACTOR') }}"
    
  tasks:
    - block:

        - include: pod_delete_ansible_prerequisites.yml
      
        - name: "[PreReq]: Including the chaos util for the {{ c_experiment }} experiment"
          include_vars:
            file: /tmp/chaosutil.yml

        ## GENERATE EXP RESULT NAME
        - name: "[PreReq]: Constructing the chaos result name"
          set_fact:
            c_result: "{{ c_engine }}-{{ c_experiment }}"
          when: "c_engine is defined and c_engine != ''"

        ## RECORD START-OF-EXPERIMENT IN LITMUSCHAOS RESULT CR
        - name: "[PreReq]: Updating the chaos result of {{ c_experiment }} experiment (SOT)"
          include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars:
            status: 'SOT'
            namespace: "{{ c_ns }}"

         ## DISPLAY APP INFORMATION 
        - name: "[Info]: Display the application information passed via the test job"
          debug: 
            msg: 
              - "The application info is as follows:"
              - "Cassandra Namespace    : {{ a_ns }}"
              - "Cassandra Label        : {{ a_label }}"
              - "Cassandra Service      : {{ cassandra_svc_name }}"
              - "Cassandra Port         : {{ cassandra_port }}"
              - "Ramp Time              : {{ ramp_time }}"  
     
        ## PRE-CHAOS APPLICATION STATUS CHECK
        - name: "[Status]: Verify that the AUT (Application Under Test) is running (pre-chaos)"
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"      
            delay: 2
            retries: 90

        ## RECORD EVENT FOR PRE-CHAOS CHECK
        - name: "[Event]: Generating an Event for PreChaosCheck"
          include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
          vars:
            stage: "PreChaosCheck"
            exp_pod_name: "{{ chaos_pod_name }}"
            engine_ns: "{{ c_ns }}"
            message: "AUT is Running successfully"
          when: "c_engine is defined and c_engine != ''"

        ## CHECKING FOR THE DISTRIBUTION ON THE RING (PRE CHAOS)
        - name: "[Status]: Checking the load distribution on the ring"
          include_tasks: /utils/apps/cassandra/nodetool_status.yml
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"

        ## SETUP THE LIVENESS POD FOR CASSANDRA STATEFULSET
        - name: "[Livenss]: Creating the liveness pod for cassandra statefulset"
          include_tasks: "/utils/apps/cassandra/cassandra_liveness_check.yml" 
          vars:
            liveness_ns: "{{ a_ns }}"
          when: "liveness_check is defined and liveness_check == 'enabled'"
              
        ## FAULT INJECTION 
        - include_tasks: "{{ c_util }}"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"
   
        ## POST-CHAOS APPLICATION STATUS CHECK
        - name: "[Status]: Verify that the AUT (Application Under Test) is running (post-chaos)"
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"     
            delay: 2
            retries: 90   
            
        ## RECORD EVENT FOR POST CHAOS CHECK
        - name: "[Event]: Generating an Event for PostChaosCheck"
          include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
          vars:
            stage: "PostChaosCheck"
            exp_pod_name: "{{ chaos_pod_name }}"
            engine_ns: "{{ c_ns }}"
            message: "AUT is Running successfully"
          when: "c_engine is defined and c_engine != ''"

        ## CHECKING FOR THE DISTRIBUTION ON THE RING (POST CHAOS)
        - include_tasks: /utils/apps/cassandra/nodetool_status.yml
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"

        - block:

            - name: "[Status]: Confirm that the cassandra liveness pod is running"
              include_tasks: "/utils/common/status_app_pod.yml"
              vars:
                app_ns: "{{ a_ns }}"
                app_label: "name=cassandra-liveness-deploy"      
                delay: 2
                retries: 90

             ## CLEANING THE LIVENESS POD FOR CASSANDRA STATEFULSET
            - name: "[CleanUP]: Removing the cassandra's liveness deployment"
              include_tasks: "/utils/apps/cassandra/cassandra_liveness_cleanup.yml"
              vars:
                liveness_ns: "{{ a_ns }}" 

          when: "liveness_check is defined and liveness_check == 'enabled'"

        - set_fact:
            flag: "Pass"

        - name: "[Result]: Getting the final result of {{ c_experiment }} experiment"
          debug:
            msg: "{{ c_experiment }} experiment has been {{ flag }}ed"


      rescue: 
        - set_fact: 
            flag: "Fail"

        - name: "[Result]: Getting the final result of {{ c_experiment }} experiment"
          debug:
            msg: "{{ c_experiment }} experiment has been {{ flag }}ed"


        - name: "[CleanUP]: Removing the cassandra's liveness deployment"
          include_tasks: "/utils/apps/cassandra/cassandra_liveness_cleanup.yml"
          vars:
            liveness_ns: "{{ a_ns }}" 
          when: "liveness_check is defined and liveness_check == 'enabled' and liveness_pod_result.rc == 0"

      always: 

        ## Getting failure step from experiment-pod
        - include_tasks: /utils/runtime/getting_failure_step.yml  

        ## RECORD END-OF-TEST IN LITMUSCHAOS RESULT CR
        - name: "[The End]: Updating the chaos result of {{ c_experiment }} experiment (EOT)"
          include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars:
            status: 'EOT'
            namespace: "{{ c_ns }}"
