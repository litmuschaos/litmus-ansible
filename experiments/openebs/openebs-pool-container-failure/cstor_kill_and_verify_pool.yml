---
- name: "[Prepare]: Fetch the pool pod name from cvr"
  include_tasks: "/utils/apps/openebs/fetch_podname_from_cvr.yml"

- name: "[Prepare]: Getting the name of pool pod"
  set_fact: 
    cstor_pool_pod: "{{ pool_pod_named_list | random }}"

- name: "[Info]: Displaying the pool pod name"
  debug: 
    msg: 
      - "The application info is as follows:"
      - " pod-name  : {{ cstor_pool_pod }}"
              
- name: "[Status]: Getting the runningStatus of pool pod"
  shell: >
    kubectl get pod {{ cstor_pool_pod }} -n {{ openebs_ns }}
    -o=jsonpath='{range .status.containerStatuses[*]}{.state}{"\n"}{end}' |
    grep -w running | wc -l
  args:
    executable: /bin/bash
  register: runningStatusCount
  until: "runningStatusCount.stdout == \"3\""
  delay: 2
  retries: 90

# including pumba chaoslib pod_failure_by_sigkill (container kill)
- name: "[Include]: Including the pumba chaoslib for container kill"
  include_tasks: /chaoslib/pumba/pod_failure_by_sigkill.yml
  vars:
    namespace: "{{ openebs_ns }}"
    label: "app=cstor-pool"
    app_pod: "{{ cstor_pool_pod }}"
    app_container: "cstor-pool"

- name: "[Status]: Checking the running status of pool pod"
  shell: >
    kubectl get pod {{ cstor_pool_pod }} -n {{ openebs_ns }} |
    grep -w "Running" | wc -l
  args:
    executable: /bin/bash
  register: cstor_pool_pod_cnt
  until: "cstor_pool_pod_cnt.stdout == \"1\""
  delay: 2
  retries: 90

- name: "[Status]: Checking the running status of pool container"
  shell: >
    kubectl get pod {{ cstor_pool_pod }} -n {{ openebs_ns }}
    -o=jsonpath='{range .status.containerStatuses[*]}{.state}{"\n"}{end}' |
    grep -w running | wc -l
  args:
    executable: /bin/bash
  register: runningStatusCount
  until: "runningStatusCount.stdout == \"3\""
  delay: 2
  retries: 90
